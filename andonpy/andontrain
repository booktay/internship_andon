#!/usr/bin/env python
# Siwanont Sittinam
# Train & Create Control

# Import necessary modules
import optparse as optparse
import sys as sys

from lib.create_dataset import CreateDataset
from lib.train_dataset import Training

def whenError(parser):
    parser.print_help()
    sys.exit(1)

def createDataset(source, name):
    source = source.lower()
    name = name.lower()
    print('[Initial] create dataset')
    # FD = FaceDetection()
    if source == "camera":
        CreateDataset(name).run()
    elif source == "image":
        print('[Initial] detect faces with image')
        print("Coming soon")

def trainDataset():
    print('[Initial] train all datasets')
    Training().train()


def main():
    parse = optparse.OptionParser()
    parse.add_option('-n', '--name', help="input username on GitHub", dest="name")
    parse.add_option('-c', '--create', default=False, action="store_true" , help="create dataset", dest="create")
    parse.add_option('-t', '--train', default=False, action="store_true" , help="train all datasets", dest="train")
    parse.add_option('-a', '--auto', default=False, action="store_true" , help="use camera to create dataset and train all datasets", dest="auto")
    create_group = optparse.OptionGroup(parse, "Creating Dataset Options", "Use These Options with -c, --create for Creating dataset")
    create_group.add_option('--source', help="choose camera or image to create datasets (image will be coming soon)", dest="source", type="string")
    parse.add_option_group(create_group)
    options, arguments = parse.parse_args()

    if options.auto and not options.create and not options.train:
        if not options.name:
            print("[Error] Input username \n")
            whenError(parse)
        print("[Initial] Auto mode")
        print("[Initial] Creating dataset by camera and Training all datasets")
        createDataset("camera", options.name)
        trainDataset()
    elif options.create and not options.train and not options.auto:
        if options.source and options.name : createDataset(options.source, options.name)
        else :
            if not options.name: print("[Error] Input username \n")
            whenError(parse)
    elif options.train and not options.create and not options.auto:
        if options.source : whenError(parse)
        else : trainDataset()
    else : whenError(parse)

if __name__ == '__main__':
    main()
